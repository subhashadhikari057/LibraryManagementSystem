package dao;

import model.Reservation;
import util.DBUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class ReservationDAO {

    // Add a reservation
    public void addReservation(Reservation reservation) {
        String sql = "INSERT INTO reservations (book_id, user_name, reservation_date) VALUES (?, ?, ?)";

        try (Connection conn = DBUtil.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, reservation.getBookId());
            stmt.setString(2, reservation.getUserName());
            stmt.setString(3, reservation.getReservationDate());

            stmt.executeUpdate();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public int getBookIdByReservationId(int reservationId) {
        String sql = "SELECT book_id FROM reservations WHERE id = ?";
        try (Connection conn = DBUtil.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, reservationId);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt("book_id");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1; // Not found
    }

    public void deleteReservation(int reservationId) {
        String sql = "DELETE FROM reservations WHERE id = ?";
        try (Connection conn = DBUtil.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, reservationId);
            stmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // ✅ Get reservations for a specific user including book title
    public List<Reservation> getReservationsByUser(String userName) {
        List<Reservation> reservations = new ArrayList<>();
        String sql = "SELECT r.id, r.book_id, b.title, r.user_name, r.reservation_date " +
                     "FROM reservations r JOIN books b ON r.book_id = b.id " +
                     "WHERE r.user_name = ?";

        try (Connection conn = DBUtil.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, userName);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                Reservation res = new Reservation();
                res.setId(rs.getInt("id"));
                res.setBookId(rs.getInt("book_id"));
                res.setUserName(rs.getString("user_name"));
                res.setReservationDate(rs.getString("reservation_date"));
                res.setBookTitle(rs.getString("title")); // ✅ set book title
                reservations.add(res);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return reservations;
    }
}
