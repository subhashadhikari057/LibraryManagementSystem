package dao;

import util.DBConnection;
import model.Reservation;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class ReservationDAO {

    public int getTotalReservations() {
        String sql = "SELECT COUNT(*) FROM reservations";
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {

            if (rs.next()) return rs.getInt(1);

        } catch (Exception e) {
            e.printStackTrace();
        }
        return 0;
    }

    // âœ… New method to get reservations for a specific user
    public List<Reservation> getReservationsByUserId(int userId) {
        List<Reservation> reservations = new ArrayList<>();

        String sql = "SELECT r.id, r.reserved_on, b.id AS book_id, b.title, b.author, b.category " +
                "FROM reservations r JOIN books b ON r.book_id = b.id " +
                "WHERE r.user_id = ? ORDER BY r.reserved_on DESC";


        try (Connection conn = DBConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, userId);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                Reservation res = new Reservation();
                res.setTitle(rs.getString("title"));
                res.setAuthor(rs.getString("author"));
                res.setCategory(rs.getString("category"));
                res.setReservedOn(rs.getTimestamp("reserved_on"));
                reservations.add(res);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return reservations;
    }
}
